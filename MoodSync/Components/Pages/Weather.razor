@using MoodSync.Enums
@using MoodSync.Interfaces
@using MoodSync.Models
@using MoodSync.Services
@page "/weather"
@inject IWeatherService WeatherService
@inject ILocationService LocationService
@inject IGeoCodingService GeoCodingService
@inject RecommendationService RecommendationService

<h1>Personalized Recommendations</h1>

<p>How are you feeling today?</p>
<select @bind="selectedMood">
    <option value="Happy">Happy</option>
    <option value="Sad">Sad</option>
    <option value="Stressed">Stressed</option>
    <option value="Relaxed">Relaxed</option>
    <option value="Angry">Angry</option>
</select>

<p>Enter your location:</p>
<input @bind="location" placeholder="Enter a city or town" />

<button @onclick="GetRecommendations">Get Recommendations</button>

@if (weatherData != null)
{
    <h3>Weather in @location:</h3>
    <p>Temperature: @weatherData.Main.Temperature °C</p>
    <p>Description: @weatherData.Weather[0].Description</p>
}

@if (recommendations != null)
{
    <h3>Recommendations for you:</h3>
    <ul>
        @foreach (var recommendation in recommendations)
        {
            <li>@recommendation</li>
        }
    </ul>
}

@code {
    private Mood selectedMood = Mood.Happy;
    private string location = "";
    private List<string> recommendations;
    private WeatherData weatherData;

    private async Task GetRecommendations()
    {
        recommendations = await RecommendationService.GetRecommendationsAsync(location, selectedMood);
        weatherData = await WeatherService.GetWeatherAsync(location);
    }
}
